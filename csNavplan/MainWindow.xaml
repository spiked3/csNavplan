<RibbonWindow x:Class="csNavplan.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:csNavplan"
        xmlns:xtk="http://schemas.xceed.com/wpf/xaml/toolkit"                 
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}" Closing="Window_Closing" Loaded="Window_Loaded" d:DesignWidth="1046" d:DesignHeight="857" >

    <RibbonWindow.CommandBindings>
        <CommandBinding Command="Save" Executed="CommandBinding_Save" />
        <CommandBinding Command="Close" Executed="CommandBinding_Close"  />
    </RibbonWindow.CommandBindings>

    <RibbonWindow.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="Save"/>
        <KeyBinding Key="X" Modifiers="Control" Command="Close"/>
    </RibbonWindow.InputBindings>

    <DockPanel LastChildFill="True">
        <Ribbon DockPanel.Dock="Top" SelectedItem="Main" >
            <Ribbon.Resources>
                <Style TargetType="Button" >
                    <Setter Property="Width" Value="72" />
                    <Setter Property="Margin" Value="4,8" />
                </Style>
            </Ribbon.Resources>
            <Ribbon.QuickAccessToolBar>
                <RibbonQuickAccessToolBar>
                    <!--<RibbonButton Content="Test"  />-->
                </RibbonQuickAccessToolBar>
            </Ribbon.QuickAccessToolBar>
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>
                    <RibbonApplicationMenuItem Header="_New" Click="New_Click" ImageSource="images/Document-02.png"  />
                    <RibbonApplicationMenuItem Header="_Open ..." Click="Open_Click" ImageSource="images/Open.png" />
                    <RibbonApplicationMenuItem Header="_Save" Command="Save" ImageSource="images/Save.png" />
                    <RibbonApplicationMenuItem Header="Save _as ...." Click="SaveAs_Click"  />
                    <RibbonApplicationMenuItem Header="E_xit" Command="Close" />
                    <RibbonSeparator />
                    <RibbonApplicationMenuItem Header="_Clear Image" Click="ClearImage_Click"  />
                    <RibbonApplicationMenuItem Header="_Import Image ..." Click="ImportImage_Click" />
                    <RibbonApplicationMenuItem Header="Sa_ve Image ..." Click="SaveImage_Click" />
                    <RibbonSeparator />
                    <RibbonApplicationMenuItem Header="Color ..." Click="Color_Click" />
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>

            <RibbonTab Header="Main">
                <RibbonGroup Header="View">
                    <RibbonButton Content="Plan to Clipboard" Click="PlanToClipboard_Click" />

                    <!--<TextBlock Text="Grid Spacing" Margin="8,0" />-->
                    <RibbonComboBox Label="Grid Spacing" >
                        <RibbonGallery x:Name="spacingCombobox1" SelectedValue="10" SelectedValuePath="Content" MaxColumnCount="1" SelectionChanged="RibbonGallery_SelectionChanged" >
                            <RibbonGalleryCategory>
                                <RibbonGalleryItem Content=".1" />
                                <RibbonGalleryItem Content="1"  />
                                <RibbonGalleryItem Content="10" />
                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonComboBox>

                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="Zoom" Margin="8,4" />
                        <Slider x:Name="zoom1" Minimum="1" Maximum="5" Width="96" Margin="12,0"/>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="Temp" >
                    <RibbonButton Label="Generate" Click="PlanToClipboard_Click" LargeImageSource="images/C Sharp-01.png" />
                    <RibbonButton Label="Publish" LargeImageSource="images/Document-02.png" Click="Publish_Click" />
                    <RibbonButton Label="Origin RC" Click="OriginRC_Click" LargeImageSource="images/House-07.png"  />
                    <RibbonButton Label="UtmRect RC" Click="UtmRectRCRibbonButton_Click" LargeImageSource="images/Maps -04.png" />
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>

        <StatusBar DockPanel.Dock="Bottom" >
            <StatusBarItem >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Mouse XY" Margin="2,0,4,0"/>
                    <TextBlock Text="{Binding MouseXY,StringFormat={}{0:F0}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Pct" Margin="2,0,4,0"/>
                    <TextBlock Text="{Binding MousePct,StringFormat={}{0:F2}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Local" Margin="2,0,4,0"/>
                    <TextBlock Text="{Binding MouseLocal,StringFormat={}{0:F3}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Utm" Margin="8,0,4,0"/>
                    <TextBlock Text="{Binding MouseUtm,StringFormat={}{0:F3}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Gps" Margin="8,0,4,0" />
                    <TextBlock Text="{Binding MouseGps,StringFormat={}{0:F5}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator />
            <StatusBarItem >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Distance between Align Points " />
                    <TextBlock Text="{Binding AlignUtmDistance,StringFormat={}{0:F3}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator />
            <StatusBarItem >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Ruler Length " />
                    <TextBlock Text="{Binding RulerLength,StringFormat={}{0:F3}}" />
                    <TextBlock Text="  " />
                    <TextBlock Text="Ruler Heading " />
                    <TextBlock Text="{Binding RulerHeading,StringFormat={}{0:F1}}" />
                </StackPanel>
            </StatusBarItem>
            <Separator />

            <StatusBarItem HorizontalAlignment="Right" >
                <TextBlock x:Name="StatusTextBlock" />
            </StatusBarItem>
        </StatusBar>

        <Expander x:Name="alignmentExpander" DockPanel.Dock="Right" ExpandDirection="Left" IsExpanded="true" >
            <Expander.Header>
                <TextBlock Text="Alignment Points">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="-90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <StackPanel Orientation="Vertical" Width="Auto">
                <!--todo
                <local:AlignPointCtl DataContext="{Binding Plan.ImagePlanPoint}" Height="Auto" Width="Auto" />
                <Button Content="Google" Width="75" Click="Google_Click" Margin="4" />
                <local:AlignPointCtl DataContext="{Binding Plan.Align1}" />
                <local:AlignPointCtl DataContext="{Binding Plan.Align2}" />
                <local:AlignPointCtl DataContext="{Binding Plan.Origin}" />-->
                <xtk:PropertyGrid SelectedObject="{Binding Plan}" />
            </StackPanel>
        </Expander>

        <Grid ClipToBounds="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="220" />
            </Grid.ColumnDefinitions>
            <local:PlanCanvas x:Name="grid1" Background="WhiteSmoke" AlignPointBrush="Yellow" Foreground="White" 
                          MouseRightButtonDown="grid1_MouseRightButtonDown" MouseMove="grid1_MouseMove" MouseLeftButtonDown="grid1_MouseLeftButtonDown"
                          MouseLeftButtonUp="grid1_MouseLeftButtonUp" MouseLeave="grid1_MouseLeave" 
                              RenderTransformOrigin="0.5,0.5" MouseWheel="grid1_MouseWheel" >
                <local:PlanCanvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="{Binding Value,ElementName=zoom1}" ScaleY="{Binding Value,ElementName=zoom1}"/>
                    </TransformGroup>
                </local:PlanCanvas.RenderTransform>
                <local:PlanCanvas.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Align1" Click="Align1_Click" />
                        <MenuItem Header="Align2" Click="Align2_Click" />
                        <MenuItem Header="Origin" Click="Origin_Click" />
                        <Separator />
                        <MenuItem Header="WayPoint" Click="Waypoint_Click"  />
                        <MenuItem Header="Action WayPoint" Click="ActionWaypoint_Click" />

                        <Separator />
                        <MenuItem Header="Test" Click="Test_Click" />

                    </ContextMenu>
                </local:PlanCanvas.ContextMenu>
            </local:PlanCanvas>

            <local:WayPointCRUD DataContext="{Binding Plan}" Grid.Column="1" />

        </Grid>

    </DockPanel>
</RibbonWindow>
